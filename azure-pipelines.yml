# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  name: localPool

variables:
  SONARQUBE_PROJECT_KEY: 'Art_Marketplace_Art_Marketplace_c6b13971-365e-45d9-98e2-18005c410f18'  # Replace with your SonarQube project key
  SONARQUBE_SERVICE_CONNECTION: 'My_SonarQube'  # Replace with your SonarQube service connection name
  FEED_NAME: 'my-artifact-feed'  # Replace with your Azure Artifacts feed name
  PACKAGE_NAME: 'art-market'  # Replace with your package name
  NODE_ENV: 'production'
  PACKAGE_VERSION: '$(Build.BuildId)'  # Semantic version using the build ID


steps:
# Step 1: Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'


# Step 2: Prepare SonarQube analysis
- task: SonarQubePrepare@5
  inputs:
    SonarQube: '$(SONARQUBE_SERVICE_CONNECTION)'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(SONARQUBE_PROJECT_KEY)'
    cliSources: '.'  # Root folder of your project
    extraProperties: |
      sonar.exclusions=**/node_modules/**,**/*.spec.ts  # Exclude specific folders/files
      sonar.typescript.lcov.reportPaths=coverage/lcov.info  # Set code coverage report path (if applicable)


# Step 3: Install dependencies and build Angular project
- script: |
    npm install -g @angular/cli
    cd ArtMarket
    npm install
    ng build --prod
    npm pack
  displayName: 'npm install and build and package'

- script: |
    cd ArtMarket
    if not exist package.json (
        echo "package.json not found! Exiting..."
        exit 1
    )
    npm version patch --no-git-tag-version
  displayName: 'Update package version'

  # Step 4: Run SonarQube analysis
- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube analysis'

# Step 5: Publish SonarQube quality gate results
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarQube quality gate results'

- script: |
    cd ArtMarket
    npm version --no-git-tag-version 1.0.$(Build.BuildId)
    npm pack
  displayName: 'Package project'
  
  # Step 2: Verify package creation
- script: |
    cd ArtMarket
    ls -l
  displayName: 'Verify package creation'


# Step 7: Push package to Azure Artifacts
- task: npm@1
  inputs:
    command: 'custom'
    customCommand: 'publish ./ArtMarket/art-market-1.0.$(Build.BuildId).tgz --registry https://pkgs.dev.azure.com/$(System.CollectionId)/_packaging/$(FEED_NAME)/npm/registry/'
    verbose: true
  displayName: 'Push package to Azure Artifacts'
